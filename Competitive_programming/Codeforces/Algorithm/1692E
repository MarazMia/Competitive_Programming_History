import math
from re import X
 
def minO(nums,x):
        target = x
        curr_sum, max_len = 0, 0
        start_idx = 0
        found = False
        for end_idx in range(len(nums)):
            curr_sum += nums[end_idx]
            while start_idx <= end_idx and curr_sum > target:
                curr_sum -= nums[start_idx]
                start_idx += 1
            if curr_sum == target:
                found = True
                max_len = max(max_len, end_idx - start_idx + 1)
 
        return len(nums) - max_len if found else -1
    
def main():
 
    for _ in range(int(input())):
        n,x=map(int,input().split())
        a=list(map(int,input().split()))
        print(minO(a,x))
    return
    
if __name__ == '__main__':
    main()
