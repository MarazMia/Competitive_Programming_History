import math 
import sys
def mult_inp():
    return map(int,input().split())

def arr():
    return list(map(int,input().split()))

def binarySearch(a,item,l,r):
    while l<=r:
        mid=(l+r)//2
        if a[mid]==item:
            return mid
        if a[mid]<item:
            l=mid+1
        else:
            r=mid-1
    return -1

def gcd(a,b):
    if (b == 0):
        return a
    return gcd(b, a % b)
     

def _01knapsack(W,wt,p,n):
    ###dp table
    k = [[0 for i in range(W+1)] for i in range(n+1)]
    for x in range(n+1):
        for w in range(W+1):
            if x == 0 or w == 0 :
                k[x][w]=0
            elif wt[x-1] <= w:
                k[x][w] = max(k[x-1][w] , k[x-1][w-wt[x-1]] + p[x-1])
            else:
                k[x][w] = k[x-1][w]
    return k[n][W]

def solve():    
    n=int(input())
    s=arr()
    if n==1:
        print(1)
    else:
        s.sort()
        a=s[0]
        b=s[1]
        c=s[n-2]
        d=s[n-1]
        if a*b not in s or d*c not in s or a*d not in s:
            print(0)
        else:
            print(1) 


if __name__=='__main__':
    t=int(input())
    for _ in range(t):
        solve()
